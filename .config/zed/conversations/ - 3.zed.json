{"id":"3e0f7753-8bf3-4dcb-a270-06d0a0a65a15","zed":"context","version":"0.4.0","text":"\n\n\nWhat does \"-F template='feedback email (en)'\" mean in a CURL context?\nIn a CURL command, `-F template='feedback email (en)'` is specifying a form field parameter where:\n\n- `-F` means \"form\" and is used to send data as if it came from an HTML form submission (multipart/form-data)\n- `template` is the name of the form field\n- `'feedback email (en)'` is the value being assigned to that field\n\nFor example, it might be used in a command like:\n```bash\ncurl -F \"template=feedback email (en)\" https://example.com/api\n```\n\nThis is typically used when you need to submit form data to an API or web service, and specifically indicates that you're specifying which email template to use (in this case, an English feedback email template).\n\nThe `-F` flag automatically sets the content-type header to `multipart/form-data`, which is different from regular POST data (`-d` flag) and is commonly used when uploading files or sending structured form data.\nWhat does \"-F h:X-Mailgun-Variables='{\"test\": \"test\"}'\" mean?\nIn a CURL command, `-F h:X-Mailgun-Variables='{\"test\": \"test\"}'` is setting a Mailgun-specific custom header where:\n\n- `-F` is for form data submission\n- `h:X-Mailgun-Variables` is a Mailgun-specific header prefix (`h:` indicates it's a header)\n- The value `'{\"test\": \"test\"}'` is a JSON string containing custom variables\n\nThis is specifically used with Mailgun's API to pass custom variables with your email. For example:\n\n```bash\ncurl -F \"h:X-Mailgun-Variables='{\\\"test\\\": \\\"test\\\"}'\" \\\n     https://api.mailgun.net/v3/your-domain/messages\n```\n\nThese variables can then be used in your email templates or tracked in your email analytics. The JSON format allows you to pass multiple key-value pairs that can be accessed in your email processing logic.\n\nThe `h:` prefix is Mailgun's way of distinguishing custom headers from regular form fields in the API request.\n\nImportant notes:\n1. The JSON needs to be properly escaped if used in a shell command\n2. This is specific to Mailgun's API implementation\n3. The variables can be accessed in templates using handlebars-style syntax like `{{variableName}}`\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":107}}},{"id":{"replica_id":0,"value":17},"start":73,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":108}}},{"id":{"replica_id":0,"value":18},"start":946,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":109}}},{"id":{"replica_id":0,"value":84},"start":1008,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":110}}},{"id":{"replica_id":0,"value":85},"start":2112,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":111}}}],"summary":"","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}