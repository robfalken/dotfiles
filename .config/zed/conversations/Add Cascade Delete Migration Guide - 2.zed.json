{"id":"904e297d-59e5-43c4-b173-abab56162e51","zed":"context","version":"0.4.0","text":"\n\n\nYou are a senior software engineering consultant with 15+ years of experience, specializing in:\n\nTechnical Expertise:\n- Cloud Infrastructure & DevOps\n  * AWS CDK, CloudFormation, and AWS best practices\n  * CI/CD pipelines and automation\n  * Infrastructure as Code (IaC)\n  * Container orchestration (Docker, Kubernetes)\n\nProgramming Languages & Frameworks:\n- Rust\n  * Systems programming and performance optimization\n  * Memory safety and concurrent programming\n  * Popular crates and ecosystem\n- Ruby\n  * Rails framework and web development\n  * Testing frameworks (RSpec, Minitest)\n  * Gem development and management\n- TypeScript\n  * Advanced type system features\n  * Node.js backend development\n  * Modern ES6+ features\n- React\n  * Modern React patterns (Hooks, Context)\n  * State management (Redux, MobX)\n  * Performance optimization\n  * Component architecture\n\nArchitecture & Design:\n- Microservices architecture\n- Domain-Driven Design\n- RESTful API design\n- Event-driven architecture\n- System scalability and reliability\n- Security best practices\n\nYou excel at:\n- Code review and quality assessment\n- Architectural decision making\n- Performance optimization\n- Technical debt management\n- Best practices and design patterns\n- Clear technical communication\n\nPlease provide practical, production-ready advice with concrete examples when possible.\n```\n\nThis improved prompt:\n\n1. Specifies experience level\n2. Breaks down expertise into clear categories\n3. Provides specific sub-skills within each area\n4. Includes soft skills and consulting capabilities\n5. Sets expectations for the type of advice needed\n6. Gives more context for better-targeted responses\n\nYou can further customize this by:\n- Adding specific versions/tools you work with\n- Including industry-specific knowledge\n- Specifying methodology preferences (Agile, etc.)\n- Adding any specific certification requirements\n- Including any company-specific constraints or preferences\n\nRemember to adjust the areas of expertise based on your specific needs for each conversation.\nHow can I create a migration to add \"on delete cascade\" to a table?\nI'll provide examples for adding \"ON DELETE CASCADE\" to existing foreign key constraints in different scenarios. I'll primarily focus on Rails migrations since you mentioned Ruby, but I'll also include some raw SQL for reference.\n\n**1. Creating a new foreign key with CASCADE:**\n\n```ruby\nclass AddCascadeDeleteToComments < ActiveRecord::Migration[7.0]\n  def change\n    # For a new foreign key\n    add_foreign_key :comments, :posts, on_delete: :cascade\n  end\nend\n```\n\n**2. Replacing an existing foreign key with CASCADE:**\n\n```ruby\nclass UpdateCommentsForeignKeyToCascade < ActiveRecord::Migration[7.0]\n  def up\n    # Remove existing foreign key\n    remove_foreign_key :comments, :posts\n    \n    # Add new foreign key with cascade\n    add_foreign_key :comments, :posts, on_delete: :cascade\n  end\n\n  def down\n    # Revert to original state\n    remove_foreign_key :comments, :posts\n    add_foreign_key :comments, :posts\n  end\nend\n```\n\n**3. If you need to find the exact foreign key name first:**\n\n```ruby\nclass UpdateCommentsForeignKeyToCascade < ActiveRecord::Migration[7.0]\n  def up\n    # Postgres specific query to find foreign key name\n    fk_name = connection.execute(<<-SQL).values.first.first\n      SELECT conname\n      FROM pg_constraint\n      WHERE conrelid = 'comments'::regclass\n      AND confrelid = 'posts'::regclass\n    SQL\n\n    remove_foreign_key :comments, name: fk_name\n    add_foreign_key :comments, :posts, on_delete: :cascade\n  end\nend\n```\n\n**4. Raw SQL version (if needed):**\n\n```ruby\nclass UpdateCommentsForeignKeyToCascade < ActiveRecord::Migration[7.0]\n  def up\n    execute <<-SQL\n      ALTER TABLE comments\n      DROP CONSTRAINT comments_post_id_fkey,\n      ADD CONSTRAINT comments_post_id_fkey\n        FOREIGN KEY (post_id)\n        REFERENCES posts(id)\n        ON DELETE CASCADE;\n    SQL\n  end\n\n  def down\n    execute <<-SQL\n      ALTER TABLE comments\n      DROP CONSTRAINT comments_post_id_fkey,\n      ADD CONSTRAINT comments_post_id_fkey\n        FOREIGN KEY (post_id)\n        REFERENCES posts(id);\n    SQL\n  end\nend\n```\n\n**Important considerations:**\n\n1. **Safety First:**\n```ruby\n# Add this to your migration if you want to avoid data loss\ndef safety_assured\n  # Check if there are any orphaned records that would be deleted\n  orphaned_count = Comment.where.missing(:post).count\n  if orphaned_count > 0\n    raise \"Found #{orphaned_count} orphaned comments. Please handle them before proceeding.\"\n  end\nend\n```\n\n2. **Database Locks:**\n- Be aware that modifying foreign keys requires an exclusive lock on both tables\n- Consider running this during off-peak hours for production databases\n- For large tables, you might want to use background migrations\n\n3. **Testing:**\n```ruby\n# In your test file\nclass UpdateCommentsForeignKeyToCascadeTest < ActiveSupport::TestCase\n  def test_cascade_delete_works\n    post = Post.create!\n    comment = post.comments.create!\n    \n    assert_difference 'Comment.count', -1 do\n      post.destroy!\n    end\n  end\nend\n```\n\n4. **Documentation:**\n```ruby\nclass UpdateCommentsForeignKeyToCascade < ActiveRecord::Migration[7.0]\n  def change\n    # Add comments to document the change\n    change_table_comment :comments, <<-COMMENT\n      Comments are now cascade-deleted when their associated post is deleted.\n      Migration added on: #{Time.current}\n    COMMENT\n  end\nend\n```\n\nRemember to:\n- Back up your database before running in production\n- Test the migration in development/staging environments\n- Consider the impact on your application's business logic\n- Update any relevant documentation or team guidelines\n- Consider adding appropriate indexes if they don't exist\n\nThis change could have significant implications for your application's data integrity, so make sure it aligns with your business requirements and data management strategy.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":53}}},{"id":{"replica_id":0,"value":25},"start":2106,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":54}}},{"id":{"replica_id":0,"value":26},"start":5900,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":55}}}],"summary":"Add Cascade Delete Migration Guide","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":3,"end":2037},"icon":"Library","label":"Engineering","metadata":null}]}