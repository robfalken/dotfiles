{"id":"69ac926c-3222-493f-877e-7eeb07622c0e","zed":"context","version":"0.4.0","text":"\n\n\nHow do I declare a function in lua?\nIn Lua, there are several ways to declare a function. Here are the main approaches:\n\n1. Using the `function` keyword (basic syntax):\n```lua\nfunction functionName(parameter1, parameter2)\n    -- function body\n    return value -- optional\nend\n```\n\n2. Using local functions:\n```lua\nlocal function functionName(parameter1, parameter2)\n    -- function body\n    return value -- optional\nend\n```\n\n3. Assigning a function to a variable:\n```lua\nlocal functionName = function(parameter1, parameter2)\n    -- function body\n    return value -- optional\nend\n```\n\nHere are some practical examples:\n\n```lua\n-- Basic function\nfunction sayHello(name)\n    print(\"Hello, \" .. name)\nend\n\n-- Local function\nlocal function add(a, b)\n    return a + b\nend\n\n-- Function assigned to variable\nlocal multiply = function(a, b)\n    return a * b\nend\n\n-- Using the functions\nsayHello(\"John\")        -- Outputs: Hello, John\nprint(add(5, 3))       -- Outputs: 8\nprint(multiply(4, 2))   -- Outputs: 8\n```\n\nThe main difference between local and global functions is scope. Local functions are only accessible within the block where they are declared, while global functions can be accessed from anywhere in your program.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":35}}},{"id":{"replica_id":0,"value":14},"start":39,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":36}}},{"id":{"replica_id":0,"value":15},"start":1221,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":37}}}],"summary":"Lua Function Declaration","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}