{"id":"a3af1b8f-f5be-428d-8a9d-a5bb7a8cd393","zed":"context","version":"0.4.0","text":"\n\n\nHow do I write e regex that checks that the word \"test\" is not included in a string?\nThere are a few ways to write a regex to check that a word is NOT included in a string. Here are some common approaches:\n\n1. Using negative lookahead:\n```javascript\n^(?!.*test).*$\n```\n\n2. Simply checking if \"test\" is not in the string (in JavaScript):\n```javascript\n!/test/.test(myString)\n```\n\n3. Using String.match():\n```javascript\nmyString.match(/^((?!test).)*$/)\n```\n\nHere's a practical example in JavaScript:\n\n```javascript\n// Using test()\nconst string1 = \"This is a sample\";\nconst string2 = \"This is a test\";\n\nconst regex = /test/;\n\nconsole.log(!regex.test(string1));  // true (because \"test\" is not present)\nconsole.log(!regex.test(string2));  // false (because \"test\" is present)\n\n// Using negative lookahead\nconst betterRegex = /^(?!.*test).*$/;\n\nconsole.log(betterRegex.test(string1));  // true (because \"test\" is not present)\nconsole.log(betterRegex.test(string2));  // false (because \"test\" is present)\n```\n\nChoose the method that best fits your needs:\n- The negative lookahead (`^(?!.*test).*$`) is more precise but more complex\n- The simple negated test (`!/test/.test(string)`) is easier to read and maintain\n\nNote: These patterns are case-sensitive. If you want case-insensitive matching, add the `i` flag:\n```javascript\n/test/i\n// or\n/^(?!.*test).*$/i\n```\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":41}}},{"id":{"replica_id":0,"value":17},"start":88,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":42}}},{"id":{"replica_id":0,"value":18},"start":1360,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":43}}}],"summary":"Regex Excluding Word Test","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}