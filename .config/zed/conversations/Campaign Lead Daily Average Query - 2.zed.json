{"id":"224fac34-9887-46be-9473-bf77b8516775","zed":"context","version":"0.4.0","text":"\n\n\nYou are a senior software engineering consultant with 15+ years of experience, specializing in:\n\nTechnical Expertise:\n- Cloud Infrastructure & DevOps\n  * AWS CDK, CloudFormation, and AWS best practices\n  * CI/CD pipelines and automation\n  * Infrastructure as Code (IaC)\n  * Container orchestration (Docker, Kubernetes)\n\nProgramming Languages & Frameworks:\n- Rust\n  * Systems programming and performance optimization\n  * Memory safety and concurrent programming\n  * Popular crates and ecosystem\n- Ruby\n  * Rails framework and web development\n  * Testing frameworks (RSpec, Minitest)\n  * Gem development and management\n- TypeScript\n  * Advanced type system features\n  * Node.js backend development\n  * Modern ES6+ features\n- React\n  * Modern React patterns (Hooks, Context)\n  * State management (Redux, MobX)\n  * Performance optimization\n  * Component architecture\n\nArchitecture & Design:\n- Microservices architecture\n- Domain-Driven Design\n- RESTful API design\n- Event-driven architecture\n- System scalability and reliability\n- Security best practices\n\nYou excel at:\n- Code review and quality assessment\n- Architectural decision making\n- Performance optimization\n- Technical debt management\n- Best practices and design patterns\n- Clear technical communication\n\nPlease provide practical, production-ready advice with concrete examples when possible.\nGiven a table \"leads\" with a column \"created_at\" (datetime) and \"campaign_id\" (uuid) how can I query a list of each campaign_id with the average number of leads per day, based on the \"created_at\" column?\n# Query for Average Leads Per Day by Campaign\n\nTo calculate the average number of leads per day per campaign, you'll need to:\n\n1. Group leads by campaign\n2. Count leads per day for each campaign\n3. Calculate the average of these daily counts\n\nHere's how to approach this in SQL:\n\n```sql\nWITH daily_counts AS (\n  SELECT\n    campaign_id,\n    DATE(created_at) AS lead_date,\n    COUNT(*) AS leads_per_day\n  FROM leads\n  GROUP BY campaign_id, DATE(created_at)\n)\n\nSELECT\n  campaign_id,\n  AVG(leads_per_day) AS avg_leads_per_day\nFROM daily_counts\nGROUP BY campaign_id\nORDER BY avg_leads_per_day DESC;\n```\n\n## How This Works\n\n1. The CTE (`daily_counts`) first groups leads by both campaign and day, counting how many leads came in for each campaign on each specific day.\n2. The main query then takes these daily counts and averages them for each campaign.\n\n## Database-Specific Notes\n\n- For PostgreSQL, this query works as written\n- For MySQL, this syntax also works\n- For SQLite, you might need to use `date(created_at)` instead\n\n## Alternative Approach with Date Range Context\n\nIf you want to account for days with zero leads (which the above query doesn't), you'd need a more complex query that generates a date series:\n\n```sql\nWITH date_range AS (\n  SELECT generate_series(\n    (SELECT MIN(DATE(created_at)) FROM leads),\n    (SELECT MAX(DATE(created_at)) FROM leads),\n    '1 day'::interval\n  )::date AS day\n),\ncampaign_dates AS (\n  SELECT DISTINCT\n    c.campaign_id,\n    d.day\n  FROM (SELECT DISTINCT campaign_id FROM leads) c\n  CROSS JOIN date_range d\n),\ndaily_counts AS (\n  SELECT\n    campaign_id,\n    DATE(created_at) AS lead_date,\n    COUNT(*) AS leads_count\n  FROM leads\n  GROUP BY campaign_id, DATE(created_at)\n)\n\nSELECT\n  cd.campaign_id,\n  AVG(COALESCE(dc.leads_count, 0)) AS avg_leads_per_day\nFROM campaign_dates cd\nLEFT JOIN daily_counts dc ON cd.campaign_id = dc.campaign_id AND cd.day = dc.lead_date\nGROUP BY cd.campaign_id\nORDER BY avg_leads_per_day DESC;\n```\n\nThis more comprehensive approach accounts for days with zero leads, which is often more accurate for business reporting.\n\nChoose the first query for simplicity or the second for completeness depending on your reporting requirements.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":101}}},{"id":{"replica_id":0,"value":94},"start":1555,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":102}}},{"id":{"replica_id":0,"value":95},"start":3757,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":103}}}],"summary":"Campaign Lead Daily Average Query","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null},{"range":{"start":3,"end":1350},"icon":"Library","label":"Software Engineer","metadata":null}]}